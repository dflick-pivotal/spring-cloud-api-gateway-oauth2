configserver: true

eureka:
  instance:
    hostname: localhost
    leaseRenewalIntervalInSeconds: 10
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${server.port:8080}}
  client:
    serviceUrl:
      defaultZone: ${vcap.services.service-registry.credentials.uri:http://127.0.0.1:8761}/eureka/

---
spring:
  profiles: cloud
  cloud:
    services:
      registrationMethod: direct
eureka:
  instance:
    hostname: ${vcap.application.uris[0]}
    nonSecurePort: 80
    
---
spring:
  profiles: git
security:
  user:
    password: password
  oauth2:
    client:
      accessTokenUri: https://github.com/login/oauth/access_token
      userAuthorizationUri: https://github.com/login/oauth/authorize
      tokenName: oauth_token
      authenticationScheme: query
      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://api.github.com/user

---
spring:
  profiles: authserver
security:
  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html
    client:
      accessTokenUri: http://localhost:9999/uaa/oauth/token
      userAuthorizationUri: http://localhost:9999/uaa/oauth/authorize
      clientId: myclient
      clientSecret: myclientsecret
    resource:
      userInfoUri: http://localhost:9999/uaa/user
      
---
spring:
  profiles: authservercloud
security:
  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html
    client:
      accessTokenUri: http://auth-oauth2.local2.pcfdev.io/uaa/oauth/token
      userAuthorizationUri: http://auth-oauth2.local2.pcfdev.io/uaa/oauth/authorize
      clientId: myclient
      clientSecret: myclientsecret
    resource:
      userInfoUri: http://auth-oauth2.local2.pcfdev.io/uaa/user
  